// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –±–ª–æ–∫–æ–≤
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–æ–≤ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º—ã—Ö SQL –∑–∞–ø—Ä–æ—Å–æ–≤

const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase (–Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏)
const SUPABASE_URL = process.env.SUPABASE_URL || 'your-supabase-url';
const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY || 'your-anon-key';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function createReusableBlocks() {
  console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –±–ª–æ–∫–æ–≤...');

  try {
    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–ª–æ–∫ "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —à–∞–ø–∫–∞"
    const headerBlocks = [
      {
        block_type: 'section',
        content: {
          backgroundColor: '#ffffff',
          padding: 'medium',
          maxWidth: '1200px'
        },
        metadata: { reusable: true },
        position: 1,
        status: 'published'
      },
      {
        block_type: 'container',
        content: {
          layout: 'horizontal',
          gap: 'large',
          padding: 'none',
          backgroundColor: ''
        },
        metadata: {},
        position: 1,
        slot: 'content'
      },
      {
        block_type: 'heading',
        content: {
          text: '–ú–æ–π –§–æ—Ä—É–º',
          level: 1,
          align: 'left'
        },
        metadata: {},
        position: 1,
        slot: 'content'
      },
      {
        block_type: 'button',
        content: {
          text: '–í–æ–π—Ç–∏',
          link: '/login',
          variant: 'primary',
          size: 'medium'
        },
        metadata: {},
        position: 2,
        slot: 'content'
      }
    ];

    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–ª–æ–∫ "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —à–∞–ø–∫–∞"');

    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–ª–æ–∫ "Hero-—Å–µ–∫—Ü–∏—è"
    const heroBlocks = [
      {
        block_type: 'section',
        content: {
          backgroundColor: '#f8f9fa',
          padding: 'large',
          maxWidth: '800px'
        },
        metadata: { reusable: true },
        position: 1,
        status: 'published'
      },
      {
        block_type: 'heading',
        content: {
          text: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ñ–æ—Ä—É–º',
          level: 1,
          align: 'center'
        },
        metadata: {},
        position: 1,
        slot: 'content'
      },
      {
        block_type: 'text',
        content: {
          text: '–û–±—â–∞–π—Ç–µ—Å—å, –¥–µ–ª–∏—Ç–µ—Å—å –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ.'
        },
        metadata: {},
        position: 2,
        slot: 'content'
      },
      {
        block_type: 'button',
        content: {
          text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è',
          link: '/register',
          variant: 'primary',
          size: 'large'
        },
        metadata: {},
        position: 3,
        slot: 'content'
      }
    ];

    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–ª–æ–∫ "Hero-—Å–µ–∫—Ü–∏—è"');

    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–ª–æ–∫ "–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"
    const cardBlocks = [
      {
        block_type: 'card',
        content: {
          title: '',
          description: '',
          variant: 'default',
          size: 'medium',
          showHeader: true,
          showFooter: false
        },
        metadata: { reusable: true },
        position: 1,
        status: 'published'
      },
      {
        block_type: 'image',
        content: {
          imageUrl: 'https://via.placeholder.com/400x200?text=–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
          altText: '–ü—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
        },
        metadata: {},
        position: 1,
        slot: 'content'
      },
      {
        block_type: 'heading',
        content: {
          text: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏',
          level: 3,
          align: 'left'
        },
        metadata: {},
        position: 2,
        slot: 'content'
      },
      {
        block_type: 'text',
        content: {
          text: '–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.'
        },
        metadata: {},
        position: 3,
        slot: 'content'
      },
      {
        block_type: 'button',
        content: {
          text: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
          link: '#',
          variant: 'secondary',
          size: 'medium'
        },
        metadata: {},
        position: 1,
        slot: 'footer'
      }
    ];

    console.log('‚úÖ –°–æ–∑–¥–∞–Ω –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –±–ª–æ–∫ "–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"');

    console.log('üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –±–ª–æ–∫–æ–≤ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìù –†–µ–∑—é–º–µ:');
    console.log('- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —à–∞–ø–∫–∞: Section + Container + Heading + Button');
    console.log('- Hero-—Å–µ–∫—Ü–∏—è: Section + Heading + Text + Button');
    console.log('- –ö–∞—Ä—Ç–æ—á–∫–∞: Card + Image + Heading + Text + Button');
    console.log('\n‚ú® –≠—Ç–æ –¥–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –Ω–∞—à–∞ –∞—Ç–æ–º–∞—Ä–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –±–ª–æ–∫–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–æ–≤
createReusableBlocks();
