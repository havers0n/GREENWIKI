import React from 'react';
import { SpacingControl, ColorPicker, BorderControl, BackgroundControl } from '../controls';
import type { BlockDesignEditorProps } from '../types';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞ –±–ª–æ–∫–∞
 * –°–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –±–ª–æ–∫–∞
 */
const BlockDesignEditor: React.FC<BlockDesignEditorProps> = ({
  block,
  metadata,
  onMetadataChange
}) => {
  const blockType = block.block_type;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –±–ª–æ–∫ –¥–∏–∑–∞–π–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const supportsDesign = [
    'container_section',
    'single_button',
    'heading',
    'tabs',
    'accordion'
  ].includes(blockType);

  if (!supportsDesign) {
    return (
      <div className="text-center py-8 text-gray-500 dark:text-gray-400">
        <div className="text-2xl mb-2">üé®</div>
        <p className="text-sm">–î–∏–∑–∞–π–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –±–ª–æ–∫–∞</p>
      </div>
    );
  }

  const handleSpacingChange = (spacing: unknown) => {
    onMetadataChange({ ...metadata, spacing });
  };

  const handleBorderChange = (border: unknown) => {
    onMetadataChange({ ...metadata, border });
  };

  const handleBackgroundChange = (background: unknown) => {
    onMetadataChange({ ...metadata, background });
  };

  const handleTextColorChange = (textColor: string) => {
    onMetadataChange({ ...metadata, textColor });
  };

  return (
    <div className="space-y-4">
      {/* Spacing Control - –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –±–ª–æ–∫–æ–≤ */}
      <SpacingControl
        value={metadata.spacing as any}
        onChange={handleSpacingChange}
      />

      {/* Border Control - –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –∫–Ω–æ–ø–∫–∏ */}
      {(blockType === 'container_section' || blockType === 'single_button') && (
        <BorderControl
          value={metadata.border as any}
          onChange={handleBorderChange}
        />
      )}

      {/* Background Control - —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
      {blockType === 'container_section' && (
        <BackgroundControl
          value={metadata.background as any}
          onChange={handleBackgroundChange}
        />
      )}

      {/* Color Picker –¥–ª—è —Ç–µ–∫—Å—Ç–∞ - –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ */}
      {(blockType === 'single_button' || blockType === 'heading') && (
        <ColorPicker
          label="–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞"
          value={metadata.textColor as string}
          onChange={handleTextColorChange}
        />
      )}
    </div>
  );
};

BlockDesignEditor.displayName = 'BlockDesignEditor';

export { BlockDesignEditor };
export default BlockDesignEditor;
