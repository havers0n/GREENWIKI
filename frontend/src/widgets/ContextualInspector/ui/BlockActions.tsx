import React from 'react';
import { Typography, Button, Spinner } from '../../../shared/ui/atoms';
import type { BlockActionsProps } from '../types';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –±–ª–æ–∫–æ–º
 * –°–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */
const BlockActions: React.FC<BlockActionsProps> = ({
  block,
  onBlockDelete,
  onPublishToggle,
  publishing = false
}) => {
  return (
    <>
      {/* –ü–∞–Ω–µ–ª—å —É–¥–∞–ª–µ–Ω–∏—è */}
      {onBlockDelete && (
        <div className="border-t border-gray-200 dark:border-gray-700 pt-4">
          <Typography as="h3" className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–æ–º
          </Typography>

          <Button
            onClick={() => onBlockDelete(block.id)}
            variant="danger"
            className="w-full"
          >
            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –±–ª–æ–∫
          </Button>
        </div>
      )}

      {/* –ü–∞–Ω–µ–ª—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
      {onPublishToggle && (
        <div className="border-t border-gray-200 dark:border-gray-700 pt-4">
          <Typography as="h3" className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
            –ü—É–±–ª–∏–∫–∞—Ü–∏—è
          </Typography>

          <Button
            onClick={() => onPublishToggle(block.id)}
            disabled={publishing}
            variant={block.status === 'published' ? 'secondary' : 'primary'}
            className="w-full"
          >
            {publishing ? (
              <>
                <Spinner className="w-4 h-4 mr-1" />
                –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ‚Ä¶
              </>
            ) : block.status === 'published' ? (
              '–°–Ω—è—Ç—å —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
            ) : (
              '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'
            )}
          </Button>
        </div>
      )}
    </>
  );
};

BlockActions.displayName = 'BlockActions';

export { BlockActions };
export default BlockActions;
