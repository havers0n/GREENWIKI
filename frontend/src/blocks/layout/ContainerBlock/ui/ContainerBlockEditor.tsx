import * as React from 'react';
import { useDroppable } from '@dnd-kit/core';
import type { ContainerEditorProps } from '../types';
import { useContainerLogic } from '../model/useContainerLogic';
import { ContainerBlock } from './ContainerBlock';

/**
 * ContainerBlockEditor - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è CMS —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
 * –ö–æ–º–±–∏–Ω–∏—Ä—É–µ—Ç —á–∏—Å—Ç—ã–π ContainerBlock —Å –ª–æ–≥–∏–∫–æ–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
const ContainerBlockEditor: React.FC<ContainerEditorProps> = ({
  // Container props
  children,
  layout = 'vertical',
  gap = 'medium',
  padding = 'medium',
  backgroundColor,
  borderRadius,
  maxWidth,
  title,
  className,
  style,

  // Editor props
  editorMode = false,
  blockId,
  allBlocks = [],
  selectedBlockId,
  onSelectBlock,

  // D&D props
  droppableId,
  isDropDisabled
}) => {
  // D&D droppable hook
  const {
    setNodeRef,
    isOver
  } = useDroppable({
    id: droppableId || blockId || 'container-editor',
    disabled: isDropDisabled,
  });

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  const { isEmpty } = useContainerLogic(blockId, allBlocks);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
  const handleContainerClick = (event: React.MouseEvent) => {
    if (editorMode && onSelectBlock) {
      event.stopPropagation();
      onSelectBlock(blockId || null);
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  const isSelected = selectedBlockId === blockId;

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
  const containerClassName = [
    className,
    'relative group',
    editorMode && 'cursor-pointer transition-all duration-200',
    isSelected && 'ring-2 ring-blue-500 ring-offset-2',
    isSelected && 'bg-blue-50 dark:bg-blue-900/20',
    editorMode && !isSelected && 'hover:ring-2 hover:ring-blue-300 hover:ring-opacity-50'
  ].filter(Boolean).join(' ');

  // –°—Ç–∏–ª–∏ –¥–ª—è drop-–∑–æ–Ω—ã
  const dropZoneStyles = isOver ? 'ring-2 ring-green-400 ring-offset-2 bg-green-50 dark:bg-green-900/20' : '';

  return (
    <div ref={setNodeRef} onClick={handleContainerClick}>
      <ContainerBlock
        layout={layout}
        gap={gap}
        padding={padding}
        backgroundColor={backgroundColor}
        borderRadius={borderRadius}
        maxWidth={maxWidth}
        title={title}
        className={`${containerClassName} ${dropZoneStyles}`}
        style={style}
        droppableId={droppableId}
        isDropDisabled={isDropDisabled}
        blockId={blockId}
      >
        {/* –†–µ–Ω–¥–µ—Ä–∏–º –¥–æ—á–µ—Ä–Ω–∏–µ –±–ª–æ–∫–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ */}
        {editorMode ? (
          <>
            {children}
            {/* –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
            {isEmpty && (
              <div className="text-center py-8 text-gray-500 dark:text-gray-400 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg transition-all duration-200 hover:border-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/20">
                <div className="text-4xl mb-2">üì¶</div>
                <p className="font-medium text-lg">–ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä</p>
                <p className="text-sm mt-1 max-w-md mx-auto">
                  –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "+" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                </p>
                <div className="mt-3 text-xs text-gray-400">
                  Layout: {layout} ‚Ä¢ Gap: {gap} ‚Ä¢ Padding: {padding}
                </div>
              </div>
            )}
          </>
        ) : (
          /* –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Å—Ç–æ —Ä–µ–Ω–¥–µ—Ä–∏–º children */
          children
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ */}
        {editorMode && isSelected && (
          <div className="absolute -top-2 -right-2 bg-blue-500 text-white text-xs px-2 py-1 rounded shadow-lg z-10">
            üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ({layout})
          </div>
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏ hover */}
        {editorMode && !isSelected && (
          <div className="absolute top-2 left-2 bg-black/70 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity">
            üì¶ {title || '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä'}
          </div>
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä drop-–∑–æ–Ω—ã */}
        {isOver && (
          <div className="absolute inset-0 pointer-events-none flex items-center justify-center">
            <div className="bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg animate-pulse">
              ‚¨áÔ∏è –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–¥–µ—Å—å
            </div>
          </div>
        )}
      </ContainerBlock>
    </div>
  );
};

ContainerBlockEditor.displayName = 'ContainerBlockEditor';

export { ContainerBlockEditor };
export default ContainerBlockEditor;